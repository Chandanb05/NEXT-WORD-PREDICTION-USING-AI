import random
import string
import numpy as np
import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.preprocessing import LabelEncoder
from keras.models import Sequential
from keras.layers import Dense, LSTM

class ANN:

    def init(self, corpus):
        self.corpus = corpus
        self.vectorizer = CountVectorizer()
        self.label_encoder = LabelEncoder()

    def train(self):
        X = self.vectorizer.fit_transform(self.corpus).toarray()
        y = []
        for sentence in self.corpus:
            words = sentence.split()
            y.extend(words[1:])  # Next word in each sentence
        y_encoded = self.label_encoder.fit_transform(y[:5])

        n_classes = len(self.label_encoder.classes_)
        input_dim = X.shape[1]

        model = Sequential()
        model.add(Dense(128, input_dim=input_dim, activation='relu'))
        model.add(Dense(64, activation='relu'))
        model.add(Dense(n_classes, activation='softmax'))

        model.compile(loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
        model.fit(X, y_encoded, epochs=50, batch_size=32, verbose=0)

        self.model = model

    def predict(self, sentence):
        X = self.vectorizer.transform([sentence]).toarray()
        predicted_probabilities = self.model.predict(X)
        predicted_class = np.argmax(predicted_probabilities)
        predicted_word = self.label_encoder.inverse_transform([predicted_class])[0]
        return predicted_word


def main():
    dataset_file = "imdb_movies.csv"  # Replace with the path to your Kaggle dataset file
    text_column = "overview"  # Replace with the column name containing the text data

    # Load the Kaggle dataset into a DataFrame
    data = pd.read_csv(dataset_file)

    # Extract the text column from the DataFrame
    corpus = data[text_column].tolist()
    corpus = corpus[:5]
    model = ANN(corpus)
    model.train()

    sentence = "After dominating the"
    next_word = model.predict(sentence)
    print(next_word)


if name == "main":
    main()
